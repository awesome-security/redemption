REDEMPTION_CONFIG_SPECS_PATH ?= ./configs_specs ;
REDEMPTION_CONFIG_PATH ?= . ;
REDEMPTION_ROOT_PATH ?= ../../ ;
REDEMPTION_SRC_PATH ?= $(REDEMPTION_ROOT_PATH)/src ;
SYSTEM_TYPE ?= linux ;

include ../../jam/cxxflags.jam ;
include ../../jam/defines.jam ;

project configs
    : requirements
    <include>$(REDEMPTION_CONFIG_PATH)/src
    <include>$(REDEMPTION_CONFIG_PATH)/include/autogen
    <include>$(REDEMPTION_CONFIG_SPECS_PATH)
    <include>$(REDEMPTION_SRC_PATH)
    <include>$(REDEMPTION_SRC_PATH)/system/$(SYSTEM_TYPE)

    <conditional>@defines

    <cxxflags>-std=c++14

    $(CXXFLAGS)
    <toolset>clang:<cxxflags>-Wno-class-varargs

   : default-build release
;

constant AUTOGENDIR : include/autogen/configs/autogen ;
constant FILEGEN_CONF : $(AUTOGENDIR)/variables_configuration.hpp ;
constant FILEGEN_SPEC : $(AUTOGENDIR)/str_python_spec.hpp ;
constant FILEGEN_INI : $(AUTOGENDIR)/str_ini.hpp ;
constant FILEGEN_ENUM : $(AUTOGENDIR)/enums.hpp ;

actions generate_cpp_configs {
    $(>[0]) \
        $(AUTOGENDIR)/authid.hpp \
        $(FILEGEN_CONF) \
        $(AUTOGENDIR)/set_value.tcc
}

actions generate_python_spec {
    $(>[0]) $(FILEGEN_SPEC)
}

actions generate_ini {
    $(>[0]) $(FILEGEN_INI)
}

actions generate_enum {
    $(>) $(FILEGEN_ENUM) $(AUTOGENDIR)/enums_func_ini.hpp
}

make $(FILEGEN_CONF) : make_cpp_config generate_enum : @generate_cpp_configs : <location>. ;
make $(FILEGEN_SPEC) : make_python_spec generate_enum : @generate_python_spec : <location>. ;
make $(FILEGEN_ENUM) : make_cpp_enum : @generate_enum : <location>. ;
make $(FILEGEN_INI) : make_ini : @generate_ini : <location>. ;

alias generate_cpp_configs : $(FILEGEN_CONF) ;
alias generate_python_spec : $(FILEGEN_SPEC) ;
alias generate_enum : $(FILEGEN_ENUM) ;
alias generate_ini : $(FILEGEN_INI) ;

exe make_cpp_config : src/configs/write_cpp_config.cpp : ;
exe make_python_spec : src/configs/write_python_spec.cpp : ;
exe make_cpp_enum : src/configs/write_cpp_enumeration.cpp : ;
exe make_ini : src/configs/write_ini.cpp : ;


alias generate_types :
    generate_enum
;

alias generate_descs :
    generate_ini
    generate_python_spec
    generate_cpp_configs
;

alias generate : generate_types generate_descs ;


lib libboost_unit_test : : <name>boost_unit_test_framework <link>shared ;

import testing ;

constant LIB_TEST_DEPENDENCY : <library>libboost_unit_test ;

constant TEST_DEPENDENCIES :
    $(LIB_TEST_DEPENDENCY)
    <implicit-dependency>generate_cpp_configs
    <implicit-dependency>generate_python_spec
    <implicit-dependency>generate_enum
    <include>redemption_src
    <cxxflags>-frtti
;

## Tests
## @{
unit-test test_config : tests/test_config.cpp : $(TEST_DEPENDENCIES) ;
unit-test test_config_assign : tests/test_config_assign.cpp : $(TEST_DEPENDENCIES) ;
## }
