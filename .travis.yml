sudo: false
language: cpp

addons:
  apt:
    packages:
      - g++-5
      #- g++-6
      - libssl-dev
      - libpng12-dev
      - libboost-dev
      - libsnappy-dev
    sources: &sources
      - ubuntu-toolchain-r-test


cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/deps/llvm-3.6.2
    - ${TRAVIS_BUILD_DIR}/deps/llvm-3.7.1
    - ${TRAVIS_BUILD_DIR}/deps/llvm-3.8.0
    - ${TRAVIS_BUILD_DIR}/deps


matrix:
  include:
    # GCC 5
    - os: linux
      env: TOOLSET=gcc-5
      compiler: gcc
      before_script:
        - "echo -e 'using gcc : : g++-5 : <cxxflags>-fdiagnostics-color=always ;' > ~/user-config.jam"

    # GCC 6
    #- os: linux
    #  env: COMPILER=gcc-6
    #  compiler: gcc
    #  before_script:
    #    - "echo -e 'using gcc : : g++-6 : <cxxflags>-fdiagnostics-color=always ;' > ~/user-config.jam"

    # Clang 3.6
    - os: linux
      env: LLVM_VERSION=3.6.2
      compiler: clang

    # Clang 3.7
    - os: linux
      env: LLVM_VERSION=3.7.1
      compiler: clang

    # Clang 3.8
    #- os: linux
      #env: LLVM_VERSION=3.8.0
      #compiler: clang


install:
  ############################################################################
  # All the dependencies are installed in ${TRAVIS_BUILD_DIR}/deps/
  ############################################################################
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}

  ############################################################################
  # Setup default versions and override compiler if needed
  ############################################################################
  - if [[ "${COMPILER}" != "" ]]; then export CXX=${COMPILER}; fi

  ############################################################################
  # Install a recent CMake (unless already installed on OS X)
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
        if [[ ! -d "${DEPS_DIR}/cmake" ]]; then
            CMAKE_URL="http://www.cmake.org/files/v3.5/cmake-3.5.2-Linux-x86_64.tar.gz"
            mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
        fi
        export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
        if ! brew ls --version cmake &>/dev/null; then brew install cmake; fi
    fi

  ############################################################################
  # Install Clang, libc++ and libc++abi
  ############################################################################
  - |
    if [[ "${LLVM_VERSION}" != "" ]]; then
        LLVM_DIR=${DEPS_DIR}/llvm-${LLVM_VERSION}
        if [[ ! -d "${LLVM_DIR}" ]]; then
            LLVM_URL="http://llvm.org/releases/${LLVM_VERSION}/llvm-${LLVM_VERSION}.src.tar.xz"
            LIBCXX_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxx-${LLVM_VERSION}.src.tar.xz"
            LIBCXXABI_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxxabi-${LLVM_VERSION}.src.tar.xz"
            CLANG_URL="http://llvm.org/releases/${LLVM_VERSION}/clang+llvm-${LLVM_VERSION}-x86_64-linux-gnu-ubuntu-14.04.tar.xz"
            mkdir -p ${LLVM_DIR}/build ${LLVM_DIR}/projects/libcxx ${LLVM_DIR}/projects/libcxxabi ${LLVM_DIR}/clang
            travis_retry wget --quiet -O - ${LLVM_URL}      | tar --strip-components=1 -xJ -C ${LLVM_DIR}
            travis_retry wget --quiet -O - ${LIBCXX_URL}    | tar --strip-components=1 -xJ -C ${LLVM_DIR}/projects/libcxx
            travis_retry wget --quiet -O - ${LIBCXXABI_URL} | tar --strip-components=1 -xJ -C ${LLVM_DIR}/projects/libcxxabi
            travis_retry wget --quiet -O - ${CLANG_URL}     | tar --strip-components=1 -xJ -C ${LLVM_DIR}/clang
            (cd ${LLVM_DIR}/build && cmake .. -DCMAKE_INSTALL_PREFIX=${LLVM_DIR}/install -DCMAKE_CXX_COMPILER=clang++)
            (cd ${LLVM_DIR}/build/projects/libcxx && make install -j2)
            (cd ${LLVM_DIR}/build/projects/libcxxabi && make install -j2)
        fi
        export CXXFLAGS="-nostdinc++ -isystem ${LLVM_DIR}/install/include/c++/v1"
        [ "${LLVM_VERSION}" = "3.6.2" ] && CXXFLAGS+=" -Wno-unknown-warning-option"
        export LDFLAGS="-L ${LLVM_DIR}/install/lib -l c++ -l c++abi"
        export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${LLVM_DIR}/install/lib"
        export PATH="${LLVM_DIR}/clang/bin:${PATH}"
        export TOOLSET=clang
    fi

  ############################################################################
  # Install libav
  ############################################################################
  - |
    LIBAV_URL=https://github.com/FFmpeg/FFmpeg/archive/n2.5.11.tar.gz
    LIBAV_DIR=${DEPS_DIR}/libav
    if [[ ! -d "${LIBAV_DIR}" ]]; then
        mkdir -p ${LIBAV_DIR}/libav
        travis_retry wget --quiet -O - ${LIBAV_URL} | tar --strip-components=1 -xz -C ${LIBAV_DIR}
        # quick install (very bad)
        echo -e \
            "#ifndef AVUTIL_AVCONFIG_H\n" \
            "#define AVUTIL_AVCONFIG_H\n" \
            "#define AV_HAVE_BIGENDIAN 0\n" \
            "#define AV_HAVE_FAST_UNALIGNED 1\n" \
            "#define AV_HAVE_INCOMPATIBLE_LIBAV_ABI 0\n" \
            "#endif\n" \
        > ${LIBAV_DIR}/libavutil/avconfig.h
    fi
    export FFMPEG_INC_PATH=${LIBAV_DIR}

  ############################################################################
  # Install Boost Build
  ############################################################################
  - |
    BOOST_VERSION=1.59.0
    BOOST_DIR=${DEPS_DIR}/boost-${BOOST_VERSION}
    if [[ ! -d "${BOOST_DIR}" ]]; then
        BOOST_URL="http://sourceforge.net/projects/boost/files/boost/${BOOST_VERSION}/boost_${BOOST_VERSION//./_}.tar.gz"
        mkdir -p ${BOOST_DIR}
        { travis_retry wget --quiet -O - ${BOOST_URL} | tar --strip-components=1 -xz -C ${BOOST_DIR}; } || exit 1
    fi

    (cd ${BOOST_DIR}/tools/build && ./bootstrap.sh && ./b2 install --prefix=${DEPS_DIR}/b2)
    export PATH=${DEPS_DIR}/b2/bin:${PATH}


script:
  - cd ${TRAVIS_BUILD_DIR}
  - bjam linkflags=-c --toolset=$TOOLSET cxxflags="-std=c++11 $CXXFLAGS" -q exe libs


#branches:
#  only:
#    - master

notifications:
  email:
    recipients:
      - jpoelen@wallix.com
      - rzhou@wallix.com
      - cgrosjean@wallix.com
      - cmoroldo@wallix.com
      #- jinthavong@wallix.com
      #- mtan@wallix.com
    on_success: never
    on_failure: always
